{"version":3,"sources":["Components/Form/BookForm.js","Components/Form/FormContainer.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["genres","label","options","value","languages","styles","control","base","state","background","border","isFocused","outline","boxShadow","valueContainer","color","padding","singleValue","dropdownIndicator","placeholder","menu","option","backgroundColor","isSelected","isActive","indicatorSeparator","noOptionsMessage","groupHeading","fontWeight","paddingBottom","borderBottom","BookForm","props","title","author","description","genre","language","handleChange","bind","handleSubmit","handleGenre","handleLanguage","e","preventDefault","this","addBook","target","reset","setState","name","className","onSubmit","type","onChange","components","DropdownIndicator","find","obj","sort","rows","React","Component","FormContainer","success","successMessage","$","post","then","newBook","errors","setTimeout","catch","err","style","display","Footer","App","to","component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.ecdbfd2f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./BookForm.css\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst genres = [\r\n    {\r\n        label: \"Fiction:\",\r\n        options: [\r\n            { value: \"Children's Books\", label: \"Children's Books\" },\r\n            { value: 'Crime Thriller', label: 'Crime Thriller' },\r\n            { value: 'Literary Fiction', label: 'Literary Fiction' },\r\n            { value: 'Sci-Fi', label: 'Sci-Fi' },\r\n            { value: 'Young Adult', label: 'Young Adult' },\r\n        ]\r\n    },\r\n    {\r\n        label: \"Non-Fiction:\",\r\n        options: [\r\n            { value: 'Food ', label: 'Food ' },\r\n            { value: 'History', label: 'History' },\r\n            { value: 'Memoir', label: 'Memoir' },\r\n            { value: 'Politics', label: 'Politics' },\r\n            { value: 'Self-Help', label: 'Self-Help' },\r\n        ]\r\n    },\r\n    {\r\n        label: \"Other\", value: \"Other\"\r\n    }\r\n    \r\n]\r\n\r\nconst languages = [\r\n    { value: 'English', label: 'English' },\r\n    { value: 'Bulgarian', label: 'Bulgarian' },\r\n]\r\n\r\n\r\nconst styles = {\r\n    control: (base, state) => ({\r\n        ...base,\r\n        background: \"#f9a03f\",\r\n        border: state.isFocused ?  \"none\" : \"none\",\r\n        outline: state.isFocused ?  \"none\" : \"none\",\r\n        boxShadow: state.isFocused ?  \"none\" : \"none\"\r\n    }),\r\n    valueContainer: (base, state) => ({\r\n        ...base, \r\n        background: \"#f9a03f\",\r\n        color: \"black\",\r\n        padding: 0\r\n    }),\r\n    singleValue: (base, state) => ({\r\n        ...base,\r\n        color: \"black\"\r\n    }),\r\n    dropdownIndicator: (base, state) => ({\r\n        ...base,\r\n        background: \"#f9a03f\",\r\n    }),\r\n    placeholder: (base, state) => (\r\n        {\r\n        ...base,\r\n        color: \"#000\",\r\n    }),\r\n    menu: (base, state) => {\r\n        return {\r\n            ...base,\r\n            background: \"#f9a03f\",\r\n        }\r\n    },\r\n    option:  (base, state) => {\r\n        return {\r\n            ...base,\r\n            backgroundColor: state.isFocused || state.isSelected || state.isActive ? \"#f8dda4\" : \"#f9a03f\",\r\n            color: state.isFocused ? \"black\" : \"black\",\r\n        }\r\n    },\r\n    indicatorSeparator: (base, state) => ({\r\n        background: \"#f9a03f\",\r\n    }),\r\n    noOptionsMessage: (base, state) => ({\r\n        color: \"black\"\r\n    }),\r\n    groupHeading: (base, state) => ({\r\n        color: \"black\",\r\n        fontWeight: \"bold\",\r\n        // textAlign: \"left\",\r\n        // marginLeft: \"40px\",\r\n        paddingBottom: \"10px\",\r\n        borderBottom: \"1px solid black\"\r\n    }),\r\n\r\n}\r\n\r\nexport default class BookForm extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            author: \"\",\r\n            description: \"\",\r\n            genre: \"\",\r\n            language: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleGenre = this.handleGenre.bind(this);\r\n        this.handleLanguage = this.handleLanguage.bind(this);\r\n    }\r\n\r\n   \r\n    //render the styled form\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        this.props.addBook(this.state);        \r\n\r\n        e.target.reset();\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({[e.target.name] : e.target.value});\r\n    }\r\n\r\n    handleGenre(e){\r\n        this.setState({genre: e.value});\r\n    }\r\n\r\n    handleLanguage(e){\r\n        this.setState({language: e.value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"outer-container\">\r\n                <div className=\"header\">\r\n                    <h1>Bookle</h1>\r\n                    <p>Find your favorite books here!</p>\r\n                </div>\r\n        \r\n\r\n                <form className=\"form-container\" onSubmit={this.handleSubmit}>\r\n                    \r\n                    <div className=\"row\">\r\n                        <input className=\"form-input col-50\" name=\"title\" type=\"text\" onChange={this.handleChange} placeholder=\"Title\"/>\r\n                        <input className=\"form-input col-50\" name=\"author\" type=\"text\" onChange={this.handleChange} placeholder=\"Author\"/>\r\n                        <div className=\"select\">\r\n                            <Select \r\n                                // defaultValue={options[0]}\r\n                                placeholder=\"Select genre...\"\r\n                                styles={styles}\r\n                                components={{ DropdownIndicator:() => null }}\r\n                                className=\"theme\" \r\n                                value={genres.find(obj => obj.value === this.state.genre)} \r\n                                options={genres.sort()} \r\n                                onChange={this.handleGenre}/>\r\n                        </div>\r\n                        <div className=\"select\">\r\n                            <Select \r\n                                // defaultValue={options[0]}\r\n                                placeholder=\"Select language...\"\r\n                                styles={styles}\r\n                                components={{ DropdownIndicator:() => null }}\r\n                                className=\"theme\" \r\n                                value={languages.find(obj => obj.value === this.state.language)} \r\n                                options={languages} \r\n                                onChange={this.handleLanguage}/>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <textarea className=\"form-input\" rows=\"8\" name=\"description\" type=\"text\" onChange={this.handleChange} placeholder=\"Short description...\"/>\r\n                    \r\n                    <button className=\"btn\" type=\"submit\">Add Book</button>\r\n                </form>\r\n             </div>\r\n            \r\n        );\r\n        \r\n    }\r\n}","import React from \"react\";\r\nimport BookForm from \"./BookForm\";\r\nimport $ from \"jquery\";\r\nimport \"./FormContainer.css\"\r\n\r\nconst APIURL = \"/api/books\";\r\n\r\nexport default class FormContainer extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.addBook = this.addBook.bind(this);\r\n\r\n        this.state = {\r\n            success: false,\r\n            successMessage: \"\"\r\n        }\r\n    }\r\n\r\n    addBook({title, author, genre, description, language}){\r\n        $.post(APIURL, {\r\n            title,\r\n            author,\r\n            genre,\r\n            description,\r\n            language\r\n        }).then(newBook => {\r\n            this.setState({\r\n                success: true, \r\n                successMessage: newBook.errors ? \"Something went wrong! Make sure you specified every field!\" : \"You successfully added a book! Thank you!\"\r\n            }, \r\n            () => {\r\n                setTimeout(() => {\r\n                    this.setState({success: false, successMessage: \"\"});\r\n                }, 5000)\r\n            });\r\n            \r\n        }).catch(err => {\r\n            \r\n        });\r\n    }\r\n    //handle api calls\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                \r\n                <BookForm addBook={this.addBook}/>\r\n                <div className=\"errorMessage\" style={\r\n                    {\r\n                        display: this.state.success ? \"block\" : \"none\",\r\n                    } \r\n                }>\r\n                    {this.state.successMessage ? this.state.successMessage : \"\"}\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Footer.css\"\r\n\r\nfunction Footer(props){\r\n    \r\n    return (\r\n        <footer>Copyright &copy; 2020 \"Nikolay Lyutov\" All rights reserved</footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport { Route, Redirect} from \"react-router-dom\";\nimport FormContainer from \"./Components/Form/FormContainer\";\nimport Footer from \"./Components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route to=\"/new\" component={FormContainer} />\n      <Route to=\"/\" render={() => <Redirect to=\"/new\"/>} />\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}