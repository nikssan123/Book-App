{"version":3,"sources":["Store/Reducers/index.js","Store/Reducers/errors.js","Store/actionTypes.js","Components/BookForm.js","Components/Footer.js","Containers/Main.js","Store/Actions/books.js","Services/api.js","Store/Actions/errors.js","Containers/App.js","Store/index.js","serviceWorker.js","index.js"],"names":["rootReducer","combineReducers","errors","state","message","action","type","error","genres","label","options","value","languages","styles","control","base","background","border","isFocused","outline","boxShadow","valueContainer","color","padding","singleValue","dropdownIndicator","placeholder","menu","option","backgroundColor","isSelected","isActive","indicatorSeparator","noOptionsMessage","groupHeading","fontWeight","paddingBottom","borderBottom","BookForm","props","title","author","description","genre","language","handleChange","bind","handleSubmit","handleGenre","handleLanguage","e","preventDefault","this","removeError","addBook","setState","$","css","setTimeout","animate","scrollTop","target","reset","name","className","onSubmit","onChange","components","DropdownIndicator","find","obj","sort","rows","React","Component","Footer","connect","postBook","dispatch","method","path","data","Promise","resolve","reject","axios","toLowerCase","then","res","catch","err","response","console","log","style","textAlign","to","render","store","createStore","applyMiddleware","thunk","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.681bf994.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nimport errors from \"./errors\";\r\n\r\nconst rootReducer = combineReducers({\r\n    errors\r\n});\r\n\r\nexport default rootReducer;","import { ADD_ERROR, REMOVE_ERROR } from \"../actionTypes\";\r\n\r\nexport default function (state = {message: null}, action){\r\n    switch(action.type){\r\n        case ADD_ERROR:\r\n            return {...state, message: action.error};\r\n        case REMOVE_ERROR:\r\n            return {...state, message: null};\r\n        default: \r\n            return state;\r\n    }\r\n}","export const ADD_ERROR = \"ADD_ERROR\";\r\nexport const REMOVE_ERROR = \"REMOVE_ERROR\";","import React from \"react\";\r\nimport \"./BookForm.css\";\r\nimport Select from \"react-select\";\r\nimport $ from \"jquery\";\r\n\r\nconst genres = [\r\n    {\r\n        label: \"Fiction:\",\r\n        options: [\r\n            { value: \"Children's Books\", label: \"Children's Books\" },\r\n            { value: 'Crime Thriller', label: 'Crime Thriller' },\r\n            { value: 'Literary Fiction', label: 'Literary Fiction' },\r\n            { value: 'Sci-Fi', label: 'Sci-Fi' },\r\n            { value: 'Short Story', label: 'Short Story' },\r\n            { value: 'Novel', label: 'Novel' },\r\n            { value: 'Young Adult', label: 'Young Adult' },\r\n        ]\r\n    },\r\n    {\r\n        label: \"Non-Fiction:\",\r\n        options: [\r\n            { value: 'Food ', label: 'Food ' },\r\n            { value: 'History', label: 'History' },\r\n            { value: 'Memoir', label: 'Memoir' },\r\n            { value: 'Politics', label: 'Politics' },\r\n            { value: 'Self-Help', label: 'Self-Help' },\r\n        ]\r\n    },\r\n    {\r\n        label: \"Other\", value: \"Other\"\r\n    },\r\n    {\r\n        label: \"Poetry\", value: \"Poetry\"\r\n    },\r\n    \r\n]\r\n\r\nconst languages = [\r\n    { value: 'English', label: 'English' },\r\n    { value: 'Bulgarian', label: 'Bulgarian' },\r\n]\r\n\r\n\r\nconst styles = {\r\n    control: (base, state) => ({\r\n        ...base,\r\n        background: \"#f9a03f\",\r\n        border: state.isFocused ?  \"none\" : \"none\",\r\n        outline: state.isFocused ?  \"none\" : \"none\",\r\n        boxShadow: state.isFocused ?  \"none\" : \"none\"\r\n    }),\r\n    valueContainer: (base, state) => ({\r\n        ...base, \r\n        background: \"#f9a03f\",\r\n        color: \"black\",\r\n        padding: 0\r\n    }),\r\n    singleValue: (base, state) => ({\r\n        ...base,\r\n        color: \"black\"\r\n    }),\r\n    dropdownIndicator: (base, state) => ({\r\n        ...base,\r\n        background: \"#f9a03f\",\r\n    }),\r\n    placeholder: (base, state) => (\r\n        {\r\n        ...base,\r\n        color: \"#000\",\r\n    }),\r\n    menu: (base, state) => {\r\n        return {\r\n            ...base,\r\n            background: \"#f9a03f\",\r\n        }\r\n    },\r\n    option:  (base, state) => {\r\n        return {\r\n            ...base,\r\n            backgroundColor: state.isFocused || state.isSelected || state.isActive ? \"#f8dda4\" : \"#f9a03f\",\r\n            color: state.isFocused ? \"black\" : \"black\",\r\n        }\r\n    },\r\n    indicatorSeparator: (base, state) => ({\r\n        background: \"#f9a03f\",\r\n    }),\r\n    noOptionsMessage: (base, state) => ({\r\n        color: \"black\"\r\n    }),\r\n    groupHeading: (base, state) => ({\r\n        color: \"black\",\r\n        fontWeight: \"bold\",\r\n        // textAlign: \"left\",\r\n        // marginLeft: \"40px\",\r\n        paddingBottom: \"10px\",\r\n        borderBottom: \"1px solid black\"\r\n    }),\r\n\r\n}\r\n\r\nexport default class BookForm extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            author: \"\",\r\n            description: \"\",\r\n            genre: \"\",\r\n            language: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleGenre = this.handleGenre.bind(this);\r\n        this.handleLanguage = this.handleLanguage.bind(this);\r\n    }\r\n\r\n   \r\n    //render the styled form\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        this.props.removeError();\r\n        this.props.addBook(this.state);\r\n        this.setState({ \r\n            title: \"\",\r\n            author: \"\",\r\n            description: \"\"\r\n        });\r\n\r\n        $(\".errorMessage\").css(\"display\", \"block\");\r\n        setTimeout (() => {\r\n            $(\".errorMessage\").css(\"display\", \"none\");\r\n        }, 5000);\r\n\r\n        $(\"html, body\").animate({ scrollTop: 0 }, \"slow\");\r\n        \r\n        e.target.reset();\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({[e.target.name] : e.target.value});\r\n    }\r\n\r\n    handleGenre(e){\r\n        this.setState({genre: e.value});\r\n    }\r\n\r\n    handleLanguage(e){\r\n        this.setState({language: e.value});\r\n    }\r\n\r\n    render(){\r\n        const { errors } = this.props; \r\n        let message = errors.message ? \"Something went wrong! Make sure you specified every field!\" : \"You successfully added a book! Thank you!\";\r\n        return (\r\n            <div className=\"outer-container\">\r\n                <div className=\"header\">\r\n                    <h1>Bookle</h1>\r\n                    <p>Find your favorite books here!</p>\r\n                </div>\r\n            \r\n                <div className=\"errorMessage\">{message}</div>\r\n\r\n                <form className=\"form-container\" onSubmit={this.handleSubmit}>\r\n                    \r\n                    <div className=\"row\">\r\n                        <input className=\"form-input col-50\" name=\"title\" type=\"text\" onChange={this.handleChange} placeholder=\"Title\"/>\r\n                        <input className=\"form-input col-50\" name=\"author\" type=\"text\" onChange={this.handleChange} placeholder=\"Author\"/>\r\n                        <div className=\"select\">\r\n                            <Select \r\n                                // defaultValue={options[0]}\r\n                                placeholder=\"Select genre...\"\r\n                                styles={styles}\r\n                                components={{ DropdownIndicator:() => null }}\r\n                                className=\"theme\" \r\n                                value={genres.find(obj => obj.value === this.state.genre)} \r\n                                options={genres.sort()} \r\n                                onChange={this.handleGenre}/>\r\n                        </div>\r\n                        <div className=\"select\">\r\n                            <Select \r\n                                // defaultValue={options[0]}\r\n                                placeholder=\"Select language...\"\r\n                                styles={styles}\r\n                                components={{ DropdownIndicator:() => null }}\r\n                                className=\"theme\" \r\n                                value={languages.find(obj => obj.value === this.state.language)} \r\n                                options={languages} \r\n                                onChange={this.handleLanguage}/>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <textarea className=\"form-input\" rows=\"8\" name=\"description\" type=\"text\" onChange={this.handleChange} placeholder=\"Short description...\"/>\r\n                    \r\n                    <button className=\"btn\" type=\"submit\">Add Book</button>\r\n                </form>\r\n             </div>\r\n            \r\n        );\r\n        \r\n    }\r\n}","import React from \"react\";\r\nimport \"./Footer.css\"\r\n\r\nfunction Footer(props){\r\n    \r\n    return (\r\n        <footer>Copyright &copy; 2020 \"Nikolay Lyutov\" All rights reserved</footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport { Route, Redirect} from \"react-router-dom\";\r\nimport BookForm from \"../Components/BookForm\";\r\nimport Footer from \"../Components/Footer\";\r\nimport { postBook } from \"../Store/Actions/books\";\r\nimport { removeError } from \"../Store/Actions/errors\";\r\n\r\nconst Main = props => {\r\n    const { postBook, errors, removeError } = props;\r\n    \r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            {/* <Route to=\"/new\" component={FormContainer} /> */}\r\n            <div className=\"container\">\r\n                <Route to=\"/new\" render={props => (<BookForm errors={errors} addBook={postBook} removeError={removeError} {...props}/>)}/>\r\n                <Route to=\"/\" render={() => <Redirect to=\"/new\"/>} />\r\n                \r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n        \r\n    \r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        errors: state.errors\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {postBook, removeError})(Main);","import { apiCall } from \"../../Services/api\";\r\nimport { addError } from \"./errors\";\r\n\r\n\r\nexport const postBook = (  {title, author, description, genre, language }) => {\r\n    return dispatch => {\r\n        return apiCall(\"POST\", \"/api/books\", {title, author, description, genre, language}).then(res => {\r\n            console.log(res);\r\n        }).catch(err => {\r\n            return dispatch(addError(err));\r\n        });\r\n    }\r\n}\r\n\r\n\r\n// return new Promise((resolve, reject) => {\r\n//     apiCall(\"POST\", \"/api/books\", {title, author, description, genre, language}).then(res => {\r\n//         return resolve();\r\n//     }).catch(err => {\r\n//         dispatch(addError(err));\r\n//         return reject(err);\r\n//     });\r\n// })","import axios from \"axios\";\r\n\r\nexport function apiCall(method, path, data){\r\n    return new Promise((resolve, reject) => {\r\n        return axios[method.toLowerCase()](path, data).then(res => {\r\n            return resolve(res.data);\r\n        }).catch(err => {\r\n            return reject(err.response.data.error);\r\n        });\r\n    });\r\n}\r\n","import { ADD_ERROR, REMOVE_ERROR } from \"../actionTypes\";\r\n\r\nexport const addError = error => {\r\n    return {\r\n        type: ADD_ERROR,\r\n        error\r\n    }\r\n}\r\n\r\n\r\nexport const removeError = () => {\r\n    return {\r\n        type: REMOVE_ERROR\r\n    }\r\n}\r\n","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"../Store\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport Main from \"./Main\";\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Main />\n      </Router>\n    </Provider>\n      \n  );\n}\n\nexport default App;\n","import rootReducer from \"./Reducers\";\r\nimport {createStore, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport function configureStore(){\r\n    const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}